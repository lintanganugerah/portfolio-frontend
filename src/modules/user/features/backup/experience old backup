import { useEffect } from "react";
import { fetchExperiences } from "../store/thunks/experienceThunk";
import { format } from "date-fns";
import { useAppDispatch, useAppSelector } from "../store";
import { TimelineItem } from "../components/timeline";

export const ExperienceFeatures = () => {
  const dispatch = useAppDispatch();
  const { experiences, loading, error } = useAppSelector((state) => state.experience);

  useEffect(() => {
    dispatch(fetchExperiences());
  }, [dispatch]);

  const sortedExperiences = [...experiences].sort((a, b) => {
    if (a.type !== b.type) {
      return a.type === "job" ? -1 : 1; // "job" comes before "organizational"
    }

    return new Date(a.startDate).getTime() - new Date(b.startDate).getTime();
  });

  if (loading) return <p>Loading...</p>;
  if (error) return <p>Error: {error}</p>;
  if (!experiences.length) return <p>No Experience data available.</p>;

  return (
    <div className='space-y-6 border-l border-gray-800'>
      {sortedExperiences.map((exp) => (
        <TimelineItem
          key={exp._id}
          title={exp.position}
          subtitle={exp.entity}
          type={exp.type}
          date={format(new Date(exp.startDate), "yyyy MMMM") + " to " + format(new Date(exp.endDate), "yyyy MMMM")}
        />
      ))}
    </div>
  );
};
